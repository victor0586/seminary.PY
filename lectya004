# Task001.Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
#Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
#Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
#Затем пользователь вводит сами элементы множеств.
#n = int(input("Введите количество элементов первого множества: "))
#m = int(input("Введите количество элементов второго множества: "))

#set1 = set()
#set2 = set()

#print("Введите элементы первого множества:")
#for i in range(n):
    #num = int(input())
    #set1.add(num)

#print("Введите элементы второго множества:")
#for i in range(m):
    #num = int(input())
    #set2.add(num)

#common_elements = sorted(list(set1 & set2))

#print("Общие элементы в порядке возрастания:")
#for num in common_elements:
    #print(num)

# Task002. В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности.
 #Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
#Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
#В этом фермерском хозяйстве внедрена система автоматического сбора черники.
 #Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
#Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
#Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
#находясь перед некоторым кустом заданной во входном файле грядки.
#def max_berries(garden):
   # n = len(garden)
    #dp = [0] * n

    #dp[0] = garden[0]
    #dp[1] = max(garden[0], garden[1])

    #for i in range(2, n):
        #dp[i] = max(garden[i] + dp[i-2], dp[i-1])

    #return dp[n-1]

#garden = [2, 4, 6, 1, 5, 3]
#result = max_berries(garden)
#print("Максимальное число ягод, которое можно собрать за один заход:", result)
