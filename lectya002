#Task001
#На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
#Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. #
#Выведите минимальное количество монет, которые нужно перевернуть
#def min_coin_flips(coins):
    #heads = 2 # количество монеток с решкой вверх
    #tails = 3 # количество монеток с гербом вверх
    
    #for coin in coins:
        #if coin == 'H':
            #heads += 1
        #elif coin == 'T':
            #tails += 1
    
    #min_flips = min(heads, tails)
    
    #return min_flips

#flips = min_coin_flips(coins)
#print("Минимальное количество монет, которые нужно перевернуть:", flips)

# Task002
#Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
 #Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. 
#Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
#def find_numbers(S, P):
    #for x in range(1, S+1):
        #y = S - x
        #if x * y == P:
            #return x, y

#S = int(input("Введите сумму чисел (S): "))
#P = int(input("Введите произведение чисел (P): "))

#x, y = find_numbers(S, P)

#print("Первое число (X):", x)
#print("Второе число (Y):", y)

#Task003
#Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
#def powers_of_two(n):
    #power = 1
    #powers = []
    #while power <= n:
        #powers.append(power)
        #power *= 2
    #return powers

#result = powers_of_two(10)
#for power in result:
    #print(power)
